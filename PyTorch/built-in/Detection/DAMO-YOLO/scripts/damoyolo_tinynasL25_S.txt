2025-02-12 09:22:08.274 | INFO     | damo.apis.detector_trainer:__init__:114 - args info: Namespace(config_file='configs/damoyolo_tinynasL25_S.py', local_rank=0, tea_config=None, tea_ckpt=None, opts=[])
2025-02-12 09:22:08.276 | INFO     | damo.apis.detector_trainer:__init__:115 - cfg value:
╒═════════╤═══════════════════════════════════════════════════════════════════════════════════════════╕
│ keys    │ values                                                                                    │
╞═════════╪═══════════════════════════════════════════════════════════════════════════════════════════╡
│ model   │ {'backbone': {'act': 'relu',                                                              │
│         │               'name': 'TinyNAS_res',                                                      │
│         │               'net_structure_str': "[ {'class': 'ConvKXBNRELU', 'in': 3, 'k': "           │
│         │                                    "3, 'nbitsA': 8, 'nbitsW': 8, 'out': 32, "             │
│         │                                    "'s': 1},\n"                                           │
│         │                                    "  { 'L': 1,\n"                                        │
│         │                                    "    'btn': 24,\n"                                     │
│         │                                    "    'class': 'SuperResConvK1KX',\n"                   │
│         │                                    "    'in': 32,\n"                                      │
│         │                                    "    'inner_class': 'ResConvK1KX',\n"                  │
│         │                                    "    'k': 3,\n"                                        │
│         │                                    "    'nbitsA': [8, 8],\n"                              │
│         │                                    "    'nbitsW': [8, 8],\n"                              │
│         │                                    "    'out': 128,\n"                                    │
│         │                                    "    's': 2},\n"                                       │
│         │                                    "  { 'L': 5,\n"                                        │
│         │                                    "    'btn': 88,\n"                                     │
│         │                                    "    'class': 'SuperResConvK1KX',\n"                   │
│         │                                    "    'in': 128,\n"                                     │
│         │                                    "    'inner_class': 'ResConvK1KX',\n"                  │
│         │                                    "    'k': 3,\n"                                        │
│         │                                    "    'nbitsA': [8, 8, 8, 8, 8, 8, 8, 8, 8, "           │
│         │                                    '8],\n'                                                │
│         │                                    "    'nbitsW': [8, 8, 8, 8, 8, 8, 8, 8, 8, "           │
│         │                                    '8],\n'                                                │
│         │                                    "    'out': 128,\n"                                    │
│         │                                    "    's': 2},\n"                                       │
│         │                                    "  { 'L': 3,\n"                                        │
│         │                                    "    'btn': 128,\n"                                    │
│         │                                    "    'class': 'SuperResConvK1KX',\n"                   │
│         │                                    "    'in': 128,\n"                                     │
│         │                                    "    'inner_class': 'ResConvK1KX',\n"                  │
│         │                                    "    'k': 3,\n"                                        │
│         │                                    "    'nbitsA': [8, 8, 8, 8, 8, 8],\n"                  │
│         │                                    "    'nbitsW': [8, 8, 8, 8, 8, 8],\n"                  │
│         │                                    "    'out': 256,\n"                                    │
│         │                                    "    's': 2},\n"                                       │
│         │                                    "  { 'L': 2,\n"                                        │
│         │                                    "    'btn': 120,\n"                                    │
│         │                                    "    'class': 'SuperResConvK1KX',\n"                   │
│         │                                    "    'in': 256,\n"                                     │
│         │                                    "    'inner_class': 'ResConvK1KX',\n"                  │
│         │                                    "    'k': 3,\n"                                        │
│         │                                    "    'nbitsA': [8, 8, 8, 8],\n"                        │
│         │                                    "    'nbitsW': [8, 8, 8, 8],\n"                        │
│         │                                    "    'out': 256,\n"                                    │
│         │                                    "    's': 1},\n"                                       │
│         │                                    "  { 'L': 1,\n"                                        │
│         │                                    "    'btn': 144,\n"                                    │
│         │                                    "    'class': 'SuperResConvK1KX',\n"                   │
│         │                                    "    'in': 256,\n"                                     │
│         │                                    "    'inner_class': 'ResConvK1KX',\n"                  │
│         │                                    "    'k': 3,\n"                                        │
│         │                                    "    'nbitsA': [8, 8],\n"                              │
│         │                                    "    'nbitsW': [8, 8],\n"                              │
│         │                                    "    'out': 512,\n"                                    │
│         │                                    "    's': 2}]\n",                                      │
│         │               'out_indices': (2, 4, 5),                                                   │
│         │               'reparam': True,                                                            │
│         │               'use_focus': True,                                                          │
│         │               'with_spp': True},                                                          │
│         │  'head': {'act': 'silu',                                                                  │
│         │           'in_channels': [128, 256, 512],                                                 │
│         │           'legacy': False,                                                                │
│         │           'name': 'ZeroHead',                                                             │
│         │           'nms_conf_thre': 0.05,                                                          │
│         │           'nms_iou_thre': 0.7,                                                            │
│         │           'num_classes': 80,                                                              │
│         │           'reg_max': 16,                                                                  │
│         │           'stacked_convs': 0},                                                            │
│         │  'neck': {'act': 'relu',                                                                  │
│         │           'block_name': 'BasicBlock_3x3_Reverse',                                         │
│         │           'depth': 1.0,                                                                   │
│         │           'hidden_ratio': 0.75,                                                           │
│         │           'in_channels': [128, 256, 512],                                                 │
│         │           'name': 'GiraffeNeckV2',                                                        │
│         │           'out_channels': [128, 256, 512],                                                │
│         │           'spp': False}}                                                                  │
├─────────┼───────────────────────────────────────────────────────────────────────────────────────────┤
│ train   │ {'augment': {'mosaic_mixup': {'degrees': 10.0,                                            │
│         │                               'keep_ratio': False,                                        │
│         │                               'mixup_prob': 0.15,                                         │
│         │                               'mixup_scale': (0.5, 1.5),                                  │
│         │                               'mosaic_prob': 1.0,                                         │
│         │                               'mosaic_scale': (0.1, 2.0),                                 │
│         │                               'mosaic_size': (640, 640),                                  │
│         │                               'shear': 2.0,                                               │
│         │                               'translate': 0.2},                                          │
│         │              'transform': {'autoaug_dict': {'autoaug_params': (6, 9, 5, 3, 3, 4,          │
│         │                                                                2, 4, 4, 4, 5, 2,          │
│         │                                                                4, 1, 4, 2, 6, 4,          │
│         │                                                                2, 2, 2, 6, 2, 2,          │
│         │                                                                2, 0, 5, 1, 3, 0,          │
│         │                                                                8, 5, 2, 8, 7, 5,          │
│         │                                                                1, 3, 3, 3),               │
│         │                                             'box_prob': 0.3,                              │
│         │                                             'num_subpolicies': 5,                         │
│         │                                             'scale_splits': [2048, 10240,                 │
│         │                                                              51200]},                     │
│         │                            'flip_prob': 0.5,                                              │
│         │                            'image_max_range': (640, 640),                                 │
│         │                            'image_mean': [0.0, 0.0, 0.0],                                 │
│         │                            'image_std': [1.0, 1.0, 1.0],                                  │
│         │                            'keep_ratio': False}},                                         │
│         │  'base_lr_per_img': 0.00015625,                                                           │
│         │  'batch_size': 64,                                                                        │
│         │  'ema': True,                                                                             │
│         │  'ema_momentum': 0.9998,                                                                  │
│         │  'finetune_path': None,                                                                   │
│         │  'min_lr_ratio': 0.05,                                                                    │
│         │  'momentum': 0.9,                                                                         │
│         │  'no_aug_epochs': 16,                                                                     │
│         │  'optimizer': {'lr': 0.04,                                                                │
│         │                'momentum': 0.9,                                                           │
│         │                'name': 'SGD',                                                             │
│         │                'nesterov': True,                                                          │
│         │                'weight_decay': 0.0005},                                                   │
│         │  'resume_path': None,                                                                     │
│         │  'total_epochs': 300,                                                                     │
│         │  'warmup_epochs': 5,                                                                      │
│         │  'warmup_start_lr': 0,                                                                    │
│         │  'weight_decay': 0.0005}                                                                  │
├─────────┼───────────────────────────────────────────────────────────────────────────────────────────┤
│ test    │ {'augment': {'transform': {'flip_prob': 0.0,                                              │
│         │                            'image_max_range': (640, 640),                                 │
│         │                            'image_mean': [0.0, 0.0, 0.0],                                 │
│         │                            'image_std': [1.0, 1.0, 1.0],                                  │
│         │                            'keep_ratio': False}},                                         │
│         │  'batch_size': 128}                                                                       │
├─────────┼───────────────────────────────────────────────────────────────────────────────────────────┤
│ dataset │ {'aspect_ratio_grouping': False,                                                          │
│         │  'class_names': ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus',             │
│         │                  'train', 'truck', 'boat', 'traffic light', 'fire hydrant',               │
│         │                  'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog',             │
│         │                  'horse', 'sheep', 'cow', 'elephant', 'bear', 'zebra',                    │
│         │                  'giraffe', 'backpack', 'umbrella', 'handbag', 'tie',                     │
│         │                  'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball',               │
│         │                  'kite', 'baseball bat', 'baseball glove', 'skateboard',                  │
│         │                  'surfboard', 'tennis racket', 'bottle', 'wine glass', 'cup',             │
│         │                  'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',                     │
│         │                  'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza',          │
│         │                  'donut', 'cake', 'chair', 'couch', 'potted plant', 'bed',                │
│         │                  'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote',             │
│         │                  'keyboard', 'cell phone', 'microwave', 'oven', 'toaster',                │
│         │                  'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors',             │
│         │                  'teddy bear', 'hair drier', 'toothbrush'],                               │
│         │  'data_dir': None,                                                                        │
│         │  'paths_catalog': '/mnt/nvme1/application/zhaoyt/DAMO-YOLO/damo/config/paths_catalog.py', │
│         │  'train_ann': ('coco_2017_train',),                                                       │
│         │  'val_ann': ('coco_2017_val',)}                                                           │
├─────────┼───────────────────────────────────────────────────────────────────────────────────────────┤
│ miscs   │ {'ckpt_interval_epochs': 10,                                                              │
│         │  'eval_interval_epochs': 10,                                                              │
│         │  'exp_name': 'damoyolo_tinynasL25_S',                                                     │
│         │  'num_workers': 4,                                                                        │
│         │  'output_dir': './workdirs',                                                              │
│         │  'print_interval_iters': 50,                                                              │
│         │  'seed': 1234}                                                                            │
╘═════════╧═══════════════════════════════════════════════════════════════════════════════════════════╛
2025-02-12 09:22:08.483 | INFO     | damo.apis.detector_trainer:__init__:120 - model:
2025-02-12 09:22:08.496 | INFO     | damo.apis.detector_trainer:__init__:155 - Start Training...
2025-02-12 09:22:08.496 | INFO     | damo.apis.detector_trainer:__init__:158 - Enable ema model! Ema model will be evaluated and saved.
2025-02-12 09:22:08.770 | INFO     | torchvision.datasets.coco:__init__:36 - loading annotations into memory...
2025-02-12 09:22:18.533 | INFO     | torchvision.datasets.coco:__init__:36 - Done (t=9.76s)
2025-02-12 09:22:18.534 | INFO     | pycocotools.coco:__init__:88 - creating index...
2025-02-12 09:22:19.105 | INFO     | pycocotools.coco:__init__:88 - index created!
2025-02-12 09:22:19.133 | INFO     | torchvision.datasets.coco:__init__:36 - loading annotations into memory...
2025-02-12 09:22:19.400 | INFO     | torchvision.datasets.coco:__init__:36 - Done (t=0.27s)
2025-02-12 09:22:19.400 | INFO     | pycocotools.coco:__init__:88 - creating index...
2025-02-12 09:22:19.419 | INFO     | pycocotools.coco:__init__:88 - index created!
2025-02-12 09:22:42.629 | INFO     | damo.apis.detector_trainer:train:266 - Model Summary: backbone's params(M): 3.84, flops(G): 18.01, latency(ms): 16.586
neck's params(M): 11.90, flops(G): 18.18, latency(ms): 9.039
head's params(M): 1.19, flops(G): 3.82, latency(ms): 13.747
total latency(ms): 45.206, total flops(G): 40.01, total params(M): 16.94

2025-02-12 09:22:42.649 | INFO     | damo.apis.detector_trainer:train:271 - Model: DistributedDataParallel(
  (module): Detector(
    (backbone): TinyNAS(
      (block_list): ModuleList(
        (0): Focus(
          (conv): ConvBNAct(
            (conv): Conv2d(12, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): SyncBatchNorm(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
        )
        (1): SuperResStem(
          (act): ReLU(inplace=True)
          (block_list): ModuleList(
            (0): ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(32, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(24, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(24, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(24, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
          )
        )
        (2): SuperResStem(
          (act): ReLU(inplace=True)
          (block_list): ModuleList(
            (0): ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(128, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(88, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(88, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(88, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
            (1-4): 4 x ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(128, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(88, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(88, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(88, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
          )
        )
        (3): SuperResStem(
          (act): ReLU(inplace=True)
          (block_list): ModuleList(
            (0): ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
            (1-2): 2 x ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
          )
        )
        (4): SuperResStem(
          (act): ReLU(inplace=True)
          (block_list): ModuleList(
            (0-1): 2 x ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(256, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(120, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(120, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
          )
        )
        (5): SuperResStem(
          (act): ReLU(inplace=True)
          (block_list): ModuleList(
            (0): ResConvBlock(
              (conv1): ConvKXBN(
                (conv1): Conv2d(256, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): SyncBatchNorm(144, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (conv2): RepConv(
                (nonlinearity): Identity()
                (rbr_dense): Sequential(
                  (conv): Conv2d(144, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn): SyncBatchNorm(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(144, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (bn): SyncBatchNorm(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (activation_function): ReLU(inplace=True)
            )
            (1): SPPBottleneck(
              (conv1): ConvBNAct(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (m): ModuleList(
                (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
                (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
                (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
              )
              (conv2): ConvBNAct(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (neck): GiraffeNeckV2(
      (upsample): Upsample(scale_factor=2.0, mode='nearest')
      (bu_conv13): ConvBNAct(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (merge_3): CSPStage(
        (conv1): ConvBNAct(
          (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv2): ConvBNAct(
          (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (convs): Sequential(
          (0): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (2): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (conv3): ConvBNAct(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
      )
      (bu_conv24): ConvBNAct(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (merge_4): CSPStage(
        (conv1): ConvBNAct(
          (conv): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv2): ConvBNAct(
          (conv): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (convs): Sequential(
          (0): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (2): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (conv3): ConvBNAct(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
      )
      (merge_5): CSPStage(
        (conv1): ConvBNAct(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv2): ConvBNAct(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (convs): Sequential(
          (0): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(48, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(48, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (2): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(48, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (conv3): ConvBNAct(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
      )
      (bu_conv57): ConvBNAct(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (merge_7): CSPStage(
        (conv1): ConvBNAct(
          (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv2): ConvBNAct(
          (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (convs): Sequential(
          (0): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (2): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (conv3): ConvBNAct(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
      )
      (bu_conv46): ConvBNAct(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (bu_conv76): ConvBNAct(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (merge_6): CSPStage(
        (conv1): ConvBNAct(
          (conv): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv2): ConvBNAct(
          (conv): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (convs): Sequential(
          (0): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (2): BasicBlock_3x3_Reverse(
            (conv1): ConvBNAct(
              (conv): Conv2d(192, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv2): RepConv(
              (nonlinearity): ReLU(inplace=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (conv3): ConvBNAct(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
      )
    )
    (head): ZeroHead(
      (integral): Integral()
      (loss_dfl): DistributionFocalLoss()
      (loss_cls): QualityFocalLoss()
      (loss_bbox): GIoULoss()
      (cls_convs): ModuleList(
        (0-2): 3 x ModuleList()
      )
      (reg_convs): ModuleList(
        (0-2): 3 x ModuleList()
      )
      (gfl_cls): ModuleList(
        (0): Conv2d(128, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(512, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (gfl_reg): ModuleList(
        (0): Conv2d(128, 68, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 68, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(512, 68, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (scales): ModuleList(
        (0-2): 3 x Scale()
      )
    )
  )
)
2025-02-12 09:22:42.649 | INFO     | damo.apis.detector_trainer:train:273 - Training start...
2025-02-12 09:22:45.334 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 1/1849, mem: 6886Mb, iter_time: 2.683s, model_time: 1.991s, total_loss: 2.7, loss_cls: 0.8, loss_bbox: 1.2, loss_dfl: 0.7, lr: 0.000e+00, size: (640, 640), ETA: 0:04:25
2025-02-12 09:22:47.313 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 2/1849, mem: 7020Mb, iter_time: 1.979s, model_time: 1.954s, total_loss: 2.2, loss_cls: 0.5, loss_bbox: 1.1, loss_dfl: 0.6, lr: 1.170e-10, size: (640, 640), ETA: 0:03:48
2025-02-12 09:22:49.285 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 3/1849, mem: 7020Mb, iter_time: 1.972s, model_time: 1.902s, total_loss: 2.5, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 4.680e-10, size: (640, 640), ETA: 0:03:34
2025-02-12 09:22:51.219 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 4/1849, mem: 7020Mb, iter_time: 1.934s, model_time: 1.907s, total_loss: 2.2, loss_cls: 0.6, loss_bbox: 0.9, loss_dfl: 0.6, lr: 1.053e-09, size: (640, 640), ETA: 0:03:25
2025-02-12 09:22:53.126 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 5/1849, mem: 7020Mb, iter_time: 1.907s, model_time: 1.882s, total_loss: 2.2, loss_cls: 0.6, loss_bbox: 1.0, loss_dfl: 0.6, lr: 1.872e-09, size: (640, 640), ETA: 0:03:19
2025-02-12 09:22:55.020 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 6/1849, mem: 7020Mb, iter_time: 1.894s, model_time: 1.859s, total_loss: 2.6, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.7, lr: 2.925e-09, size: (640, 640), ETA: 0:03:13
2025-02-12 09:22:56.947 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 7/1849, mem: 7020Mb, iter_time: 1.927s, model_time: 1.895s, total_loss: 2.1, loss_cls: 0.5, loss_bbox: 1.0, loss_dfl: 0.6, lr: 4.212e-09, size: (640, 640), ETA: 0:03:09
2025-02-12 09:22:58.889 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 8/1849, mem: 7020Mb, iter_time: 1.942s, model_time: 1.892s, total_loss: 2.6, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.7, lr: 5.733e-09, size: (640, 640), ETA: 0:03:06
2025-02-12 09:23:00.861 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 9/1849, mem: 7020Mb, iter_time: 1.972s, model_time: 1.939s, total_loss: 2.2, loss_cls: 0.5, loss_bbox: 1.1, loss_dfl: 0.6, lr: 7.488e-09, size: (640, 640), ETA: 0:03:04
2025-02-12 09:23:02.760 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 10/1849, mem: 7020Mb, iter_time: 1.899s, model_time: 1.872s, total_loss: 2.9, loss_cls: 0.9, loss_bbox: 1.2, loss_dfl: 0.8, lr: 9.477e-09, size: (640, 640), ETA: 0:03:00
2025-02-12 09:23:04.672 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 11/1849, mem: 7020Mb, iter_time: 1.912s, model_time: 1.872s, total_loss: 2.7, loss_cls: 0.7, loss_bbox: 1.2, loss_dfl: 0.8, lr: 1.170e-08, size: (640, 640), ETA: 0:02:58
2025-02-12 09:23:06.593 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 12/1849, mem: 7020Mb, iter_time: 1.921s, model_time: 1.887s, total_loss: 3.5, loss_cls: 1.2, loss_bbox: 1.5, loss_dfl: 0.9, lr: 1.416e-08, size: (640, 640), ETA: 0:02:55
2025-02-12 09:23:08.502 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 13/1849, mem: 7020Mb, iter_time: 1.908s, model_time: 1.876s, total_loss: 3.0, loss_cls: 0.8, loss_bbox: 1.4, loss_dfl: 0.9, lr: 1.685e-08, size: (640, 640), ETA: 0:02:53
2025-02-12 09:23:10.441 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 14/1849, mem: 7020Mb, iter_time: 1.939s, model_time: 1.907s, total_loss: 1.9, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.5, lr: 1.977e-08, size: (640, 640), ETA: 0:02:50
2025-02-12 09:23:12.397 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 15/1849, mem: 7020Mb, iter_time: 1.957s, model_time: 1.917s, total_loss: 1.6, loss_cls: 0.4, loss_bbox: 0.8, loss_dfl: 0.4, lr: 2.293e-08, size: (640, 640), ETA: 0:02:48
2025-02-12 09:23:14.347 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 16/1849, mem: 7020Mb, iter_time: 1.950s, model_time: 1.918s, total_loss: 3.1, loss_cls: 0.7, loss_bbox: 1.6, loss_dfl: 0.9, lr: 2.633e-08, size: (640, 640), ETA: 0:02:46
2025-02-12 09:23:16.297 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 17/1849, mem: 7020Mb, iter_time: 1.950s, model_time: 1.917s, total_loss: 2.6, loss_cls: 0.7, loss_bbox: 1.2, loss_dfl: 0.7, lr: 2.995e-08, size: (640, 640), ETA: 0:02:44
2025-02-12 09:23:18.207 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 18/1849, mem: 7020Mb, iter_time: 1.910s, model_time: 1.871s, total_loss: 2.6, loss_cls: 0.8, loss_bbox: 1.1, loss_dfl: 0.7, lr: 3.381e-08, size: (640, 640), ETA: 0:02:41
2025-02-12 09:23:20.182 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 19/1849, mem: 7020Mb, iter_time: 1.975s, model_time: 1.937s, total_loss: 2.0, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.6, lr: 3.791e-08, size: (640, 640), ETA: 0:02:39
2025-02-12 09:23:22.128 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 20/1849, mem: 7020Mb, iter_time: 1.946s, model_time: 1.910s, total_loss: 2.5, loss_cls: 0.7, loss_bbox: 1.1, loss_dfl: 0.7, lr: 4.224e-08, size: (640, 640), ETA: 0:02:37
2025-02-12 09:23:24.175 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 21/1849, mem: 7020Mb, iter_time: 2.047s, model_time: 2.009s, total_loss: 2.1, loss_cls: 0.6, loss_bbox: 1.0, loss_dfl: 0.6, lr: 4.680e-08, size: (640, 640), ETA: 0:02:36
2025-02-12 09:23:26.181 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 22/1849, mem: 7020Mb, iter_time: 2.006s, model_time: 1.963s, total_loss: 2.8, loss_cls: 0.8, loss_bbox: 1.2, loss_dfl: 0.8, lr: 5.160e-08, size: (640, 640), ETA: 0:02:34
2025-02-12 09:23:28.026 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 23/1849, mem: 7020Mb, iter_time: 1.845s, model_time: 1.802s, total_loss: 3.2, loss_cls: 1.0, loss_bbox: 1.4, loss_dfl: 0.8, lr: 5.663e-08, size: (640, 640), ETA: 0:02:31
2025-02-12 09:23:29.941 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 24/1849, mem: 7020Mb, iter_time: 1.915s, model_time: 1.879s, total_loss: 3.1, loss_cls: 1.1, loss_bbox: 1.3, loss_dfl: 0.8, lr: 6.189e-08, size: (640, 640), ETA: 0:02:29
2025-02-12 09:23:31.834 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 25/1849, mem: 7020Mb, iter_time: 1.893s, model_time: 1.858s, total_loss: 4.2, loss_cls: 2.2, loss_bbox: 1.2, loss_dfl: 0.9, lr: 6.739e-08, size: (640, 640), ETA: 0:02:27
2025-02-12 09:23:33.733 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 26/1849, mem: 7020Mb, iter_time: 1.899s, model_time: 1.863s, total_loss: 3.0, loss_cls: 0.7, loss_bbox: 1.5, loss_dfl: 0.9, lr: 7.313e-08, size: (640, 640), ETA: 0:02:25
2025-02-12 09:23:35.668 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 27/1849, mem: 7020Mb, iter_time: 1.935s, model_time: 1.893s, total_loss: 2.7, loss_cls: 0.7, loss_bbox: 1.2, loss_dfl: 0.8, lr: 7.909e-08, size: (640, 640), ETA: 0:02:23
2025-02-12 09:23:37.635 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 28/1849, mem: 7020Mb, iter_time: 1.967s, model_time: 1.930s, total_loss: 2.3, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.6, lr: 8.529e-08, size: (640, 640), ETA: 0:02:21
2025-02-12 09:23:39.527 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 29/1849, mem: 7020Mb, iter_time: 1.892s, model_time: 1.857s, total_loss: 2.5, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 9.173e-08, size: (640, 640), ETA: 0:02:19
2025-02-12 09:23:41.436 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 30/1849, mem: 7020Mb, iter_time: 1.908s, model_time: 1.868s, total_loss: 5.7, loss_cls: 3.5, loss_bbox: 1.3, loss_dfl: 0.9, lr: 9.840e-08, size: (640, 640), ETA: 0:02:17
2025-02-12 09:23:43.349 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 31/1849, mem: 7020Mb, iter_time: 1.914s, model_time: 1.872s, total_loss: 2.7, loss_cls: 0.7, loss_bbox: 1.2, loss_dfl: 0.8, lr: 1.053e-07, size: (640, 640), ETA: 0:02:15
2025-02-12 09:23:45.290 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 32/1849, mem: 7020Mb, iter_time: 1.941s, model_time: 1.906s, total_loss: 1.5, loss_cls: 0.5, loss_bbox: 0.6, loss_dfl: 0.4, lr: 1.124e-07, size: (640, 640), ETA: 0:02:13
2025-02-12 09:23:47.198 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 33/1849, mem: 7020Mb, iter_time: 1.908s, model_time: 1.877s, total_loss: 2.9, loss_cls: 0.7, loss_bbox: 1.4, loss_dfl: 0.8, lr: 1.198e-07, size: (640, 640), ETA: 0:02:11
2025-02-12 09:23:49.099 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 34/1849, mem: 7020Mb, iter_time: 1.902s, model_time: 1.865s, total_loss: 3.8, loss_cls: 1.8, loss_bbox: 1.3, loss_dfl: 0.8, lr: 1.274e-07, size: (640, 640), ETA: 0:02:08
2025-02-12 09:23:50.983 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 35/1849, mem: 7020Mb, iter_time: 1.884s, model_time: 1.842s, total_loss: 2.8, loss_cls: 0.7, loss_bbox: 1.3, loss_dfl: 0.8, lr: 1.353e-07, size: (640, 640), ETA: 0:02:06
2025-02-12 09:23:52.887 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 36/1849, mem: 7020Mb, iter_time: 1.904s, model_time: 1.872s, total_loss: 2.3, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.6, lr: 1.433e-07, size: (640, 640), ETA: 0:02:04
2025-02-12 09:23:54.860 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 37/1849, mem: 7020Mb, iter_time: 1.973s, model_time: 1.928s, total_loss: 1.9, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.5, lr: 1.516e-07, size: (640, 640), ETA: 0:02:02
2025-02-12 09:23:56.703 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 38/1849, mem: 7020Mb, iter_time: 1.844s, model_time: 1.802s, total_loss: 9.3, loss_cls: 6.4, loss_bbox: 1.7, loss_dfl: 1.3, lr: 1.602e-07, size: (640, 640), ETA: 0:02:00
2025-02-12 09:23:58.621 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 39/1849, mem: 7020Mb, iter_time: 1.917s, model_time: 1.873s, total_loss: 2.3, loss_cls: 0.7, loss_bbox: 1.0, loss_dfl: 0.7, lr: 1.689e-07, size: (640, 640), ETA: 0:01:58
2025-02-12 09:24:00.489 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 40/1849, mem: 7020Mb, iter_time: 1.869s, model_time: 1.836s, total_loss: 2.7, loss_cls: 0.8, loss_bbox: 1.1, loss_dfl: 0.8, lr: 1.780e-07, size: (640, 640), ETA: 0:01:56
2025-02-12 09:24:02.409 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 41/1849, mem: 7020Mb, iter_time: 1.919s, model_time: 1.885s, total_loss: 2.5, loss_cls: 0.8, loss_bbox: 1.1, loss_dfl: 0.6, lr: 1.872e-07, size: (640, 640), ETA: 0:01:54
2025-02-12 09:24:04.293 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 42/1849, mem: 7020Mb, iter_time: 1.884s, model_time: 1.849s, total_loss: 2.2, loss_cls: 0.6, loss_bbox: 1.0, loss_dfl: 0.6, lr: 1.967e-07, size: (640, 640), ETA: 0:01:52
2025-02-12 09:24:06.203 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 43/1849, mem: 7020Mb, iter_time: 1.910s, model_time: 1.860s, total_loss: 2.5, loss_cls: 0.5, loss_bbox: 1.2, loss_dfl: 0.7, lr: 2.064e-07, size: (640, 640), ETA: 0:01:50
2025-02-12 09:24:08.114 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 44/1849, mem: 7020Mb, iter_time: 1.911s, model_time: 1.875s, total_loss: 2.3, loss_cls: 0.5, loss_bbox: 1.1, loss_dfl: 0.6, lr: 2.163e-07, size: (640, 640), ETA: 0:01:48
2025-02-12 09:24:10.122 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 45/1849, mem: 7052Mb, iter_time: 2.008s, model_time: 1.973s, total_loss: 3.5, loss_cls: 1.1, loss_bbox: 1.5, loss_dfl: 0.9, lr: 2.265e-07, size: (640, 640), ETA: 0:01:46
2025-02-12 09:24:12.028 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 46/1849, mem: 7052Mb, iter_time: 1.906s, model_time: 1.866s, total_loss: 2.6, loss_cls: 0.5, loss_bbox: 1.4, loss_dfl: 0.8, lr: 2.369e-07, size: (640, 640), ETA: 0:01:44
2025-02-12 09:24:13.895 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 47/1849, mem: 7052Mb, iter_time: 1.867s, model_time: 1.820s, total_loss: 2.5, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 2.476e-07, size: (640, 640), ETA: 0:01:42
2025-02-12 09:24:15.772 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 48/1849, mem: 7052Mb, iter_time: 1.877s, model_time: 1.842s, total_loss: 2.3, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.6, lr: 2.585e-07, size: (640, 640), ETA: 0:01:40
2025-02-12 09:24:17.663 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 49/1849, mem: 7052Mb, iter_time: 1.891s, model_time: 1.855s, total_loss: 2.0, loss_cls: 0.6, loss_bbox: 0.9, loss_dfl: 0.5, lr: 2.696e-07, size: (640, 640), ETA: 0:01:38
2025-02-12 09:24:21.182 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 50/1849, mem: 7052Mb, iter_time: 3.519s, model_time: 3.482s, total_loss: 2.7, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.8, lr: 2.809e-07, size: (640, 640), ETA: 0:01:38
2025-02-12 09:24:23.105 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 51/1849, mem: 7052Mb, iter_time: 1.923s, model_time: 1.883s, total_loss: 1.9, loss_cls: 0.4, loss_bbox: 0.9, loss_dfl: 0.5, lr: 2.925e-07, size: (640, 640), ETA: 0:01:36
2025-02-12 09:24:25.063 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 52/1849, mem: 7052Mb, iter_time: 1.957s, model_time: 1.927s, total_loss: 3.2, loss_cls: 0.6, loss_bbox: 1.6, loss_dfl: 0.9, lr: 3.043e-07, size: (640, 640), ETA: 0:01:34
2025-02-12 09:24:26.950 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 53/1849, mem: 7052Mb, iter_time: 1.887s, model_time: 1.854s, total_loss: 3.1, loss_cls: 1.2, loss_bbox: 1.2, loss_dfl: 0.7, lr: 3.164e-07, size: (640, 640), ETA: 0:01:32
2025-02-12 09:24:28.830 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 54/1849, mem: 7052Mb, iter_time: 1.880s, model_time: 1.844s, total_loss: 3.2, loss_cls: 0.9, loss_bbox: 1.4, loss_dfl: 0.9, lr: 3.287e-07, size: (640, 640), ETA: 0:01:30
2025-02-12 09:24:30.805 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 55/1849, mem: 7052Mb, iter_time: 1.975s, model_time: 1.938s, total_loss: 2.6, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.7, lr: 3.412e-07, size: (640, 640), ETA: 0:01:28
2025-02-12 09:24:32.660 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 56/1849, mem: 7052Mb, iter_time: 1.855s, model_time: 1.820s, total_loss: 3.0, loss_cls: 1.0, loss_bbox: 1.3, loss_dfl: 0.7, lr: 3.539e-07, size: (640, 640), ETA: 0:01:26
2025-02-12 09:24:34.633 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 57/1849, mem: 7052Mb, iter_time: 1.973s, model_time: 1.932s, total_loss: 2.6, loss_cls: 0.9, loss_bbox: 1.1, loss_dfl: 0.7, lr: 3.669e-07, size: (640, 640), ETA: 0:01:24
2025-02-12 09:24:36.540 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 58/1849, mem: 7052Mb, iter_time: 1.907s, model_time: 1.870s, total_loss: 2.7, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.7, lr: 3.801e-07, size: (640, 640), ETA: 0:01:22
2025-02-12 09:24:38.458 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 59/1849, mem: 7052Mb, iter_time: 1.918s, model_time: 1.879s, total_loss: 2.2, loss_cls: 0.5, loss_bbox: 1.1, loss_dfl: 0.6, lr: 3.936e-07, size: (640, 640), ETA: 0:01:20
2025-02-12 09:24:40.401 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 60/1849, mem: 7052Mb, iter_time: 1.942s, model_time: 1.911s, total_loss: 2.4, loss_cls: 0.8, loss_bbox: 1.0, loss_dfl: 0.6, lr: 4.073e-07, size: (640, 640), ETA: 0:01:18
2025-02-12 09:24:42.271 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 61/1849, mem: 7052Mb, iter_time: 1.870s, model_time: 1.826s, total_loss: 3.5, loss_cls: 1.0, loss_bbox: 1.5, loss_dfl: 1.0, lr: 4.212e-07, size: (640, 640), ETA: 0:01:16
2025-02-12 09:24:44.208 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 62/1849, mem: 7052Mb, iter_time: 1.937s, model_time: 1.900s, total_loss: 3.5, loss_cls: 0.9, loss_bbox: 1.6, loss_dfl: 1.0, lr: 4.354e-07, size: (640, 640), ETA: 0:01:14
2025-02-12 09:24:46.157 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 63/1849, mem: 7052Mb, iter_time: 1.948s, model_time: 1.908s, total_loss: 3.2, loss_cls: 1.0, loss_bbox: 1.4, loss_dfl: 0.8, lr: 4.497e-07, size: (640, 640), ETA: 0:01:12
2025-02-12 09:24:48.071 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 64/1849, mem: 7052Mb, iter_time: 1.914s, model_time: 1.879s, total_loss: 2.4, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.7, lr: 4.644e-07, size: (640, 640), ETA: 0:01:10
2025-02-12 09:24:50.063 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 65/1849, mem: 7172Mb, iter_time: 1.992s, model_time: 1.951s, total_loss: 2.8, loss_cls: 0.5, loss_bbox: 1.4, loss_dfl: 0.8, lr: 4.792e-07, size: (640, 640), ETA: 0:01:08
2025-02-12 09:24:51.973 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 66/1849, mem: 7172Mb, iter_time: 1.911s, model_time: 1.876s, total_loss: 2.6, loss_cls: 0.7, loss_bbox: 1.1, loss_dfl: 0.7, lr: 4.943e-07, size: (640, 640), ETA: 0:01:06
2025-02-12 09:24:53.871 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 67/1849, mem: 7172Mb, iter_time: 1.897s, model_time: 1.853s, total_loss: 2.5, loss_cls: 0.5, loss_bbox: 1.3, loss_dfl: 0.7, lr: 5.097e-07, size: (640, 640), ETA: 0:01:04
2025-02-12 09:24:55.786 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 68/1849, mem: 7172Mb, iter_time: 1.915s, model_time: 1.881s, total_loss: 2.7, loss_cls: 0.8, loss_bbox: 1.2, loss_dfl: 0.7, lr: 5.252e-07, size: (640, 640), ETA: 0:01:02
2025-02-12 09:24:57.675 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 69/1849, mem: 7172Mb, iter_time: 1.889s, model_time: 1.851s, total_loss: 2.8, loss_cls: 0.7, loss_bbox: 1.3, loss_dfl: 0.8, lr: 5.410e-07, size: (640, 640), ETA: 0:01:00
2025-02-12 09:24:59.561 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 70/1849, mem: 7172Mb, iter_time: 1.886s, model_time: 1.853s, total_loss: 3.6, loss_cls: 1.6, loss_bbox: 1.2, loss_dfl: 0.8, lr: 5.570e-07, size: (640, 640), ETA: 0:00:58
2025-02-12 09:25:04.217 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 71/1849, mem: 7172Mb, iter_time: 4.656s, model_time: 1.831s, total_loss: 2.9, loss_cls: 0.6, loss_bbox: 1.4, loss_dfl: 0.9, lr: 5.733e-07, size: (640, 640), ETA: 0:00:57
2025-02-12 09:25:06.150 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 72/1849, mem: 7172Mb, iter_time: 1.933s, model_time: 1.900s, total_loss: 2.7, loss_cls: 0.5, loss_bbox: 1.4, loss_dfl: 0.8, lr: 5.898e-07, size: (640, 640), ETA: 0:00:55
2025-02-12 09:25:08.087 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 73/1849, mem: 7172Mb, iter_time: 1.937s, model_time: 1.897s, total_loss: 2.4, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 6.065e-07, size: (640, 640), ETA: 0:00:53
2025-02-12 09:25:10.023 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 74/1849, mem: 7172Mb, iter_time: 1.936s, model_time: 1.902s, total_loss: 3.1, loss_cls: 0.7, loss_bbox: 1.6, loss_dfl: 0.8, lr: 6.235e-07, size: (640, 640), ETA: 0:00:51
2025-02-12 09:25:14.781 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 75/1849, mem: 7172Mb, iter_time: 4.758s, model_time: 1.929s, total_loss: 2.6, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.8, lr: 6.407e-07, size: (640, 640), ETA: 0:00:50
2025-02-12 09:25:16.725 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 76/1849, mem: 7172Mb, iter_time: 1.945s, model_time: 1.902s, total_loss: 5.0, loss_cls: 2.8, loss_bbox: 1.3, loss_dfl: 0.8, lr: 6.581e-07, size: (640, 640), ETA: 0:00:48
2025-02-12 09:25:18.617 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 77/1849, mem: 7172Mb, iter_time: 1.892s, model_time: 1.856s, total_loss: 2.7, loss_cls: 0.7, loss_bbox: 1.3, loss_dfl: 0.8, lr: 6.758e-07, size: (640, 640), ETA: 0:00:46
2025-02-12 09:25:20.572 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 78/1849, mem: 7172Mb, iter_time: 1.955s, model_time: 1.916s, total_loss: 2.7, loss_cls: 0.9, loss_bbox: 1.2, loss_dfl: 0.6, lr: 6.937e-07, size: (640, 640), ETA: 0:00:44
2025-02-12 09:25:22.453 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 79/1849, mem: 7172Mb, iter_time: 1.881s, model_time: 1.838s, total_loss: 2.2, loss_cls: 0.6, loss_bbox: 1.0, loss_dfl: 0.6, lr: 7.118e-07, size: (640, 640), ETA: 0:00:42
2025-02-12 09:25:24.373 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 80/1849, mem: 7172Mb, iter_time: 1.919s, model_time: 1.879s, total_loss: 3.9, loss_cls: 1.8, loss_bbox: 1.3, loss_dfl: 0.8, lr: 7.302e-07, size: (640, 640), ETA: 0:00:40
2025-02-12 09:25:26.225 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 81/1849, mem: 7172Mb, iter_time: 1.852s, model_time: 1.810s, total_loss: 2.6, loss_cls: 0.8, loss_bbox: 1.1, loss_dfl: 0.7, lr: 7.488e-07, size: (640, 640), ETA: 0:00:38
2025-02-12 09:25:28.242 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 82/1849, mem: 7172Mb, iter_time: 2.017s, model_time: 1.984s, total_loss: 1.9, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.5, lr: 7.676e-07, size: (640, 640), ETA: 0:00:36
2025-02-12 09:25:30.138 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 83/1849, mem: 7172Mb, iter_time: 1.895s, model_time: 1.859s, total_loss: 2.7, loss_cls: 0.6, loss_bbox: 1.3, loss_dfl: 0.8, lr: 7.867e-07, size: (640, 640), ETA: 0:00:34
2025-02-12 09:25:32.115 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 84/1849, mem: 7172Mb, iter_time: 1.978s, model_time: 1.939s, total_loss: 3.0, loss_cls: 0.9, loss_bbox: 1.3, loss_dfl: 0.8, lr: 8.060e-07, size: (640, 640), ETA: 0:00:32
2025-02-12 09:25:34.088 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 85/1849, mem: 7172Mb, iter_time: 1.973s, model_time: 1.934s, total_loss: 2.6, loss_cls: 1.1, loss_bbox: 0.9, loss_dfl: 0.5, lr: 8.256e-07, size: (640, 640), ETA: 0:00:30
2025-02-12 09:25:36.051 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 86/1849, mem: 7172Mb, iter_time: 1.963s, model_time: 1.915s, total_loss: 1.8, loss_cls: 0.4, loss_bbox: 0.9, loss_dfl: 0.5, lr: 8.453e-07, size: (640, 640), ETA: 0:00:28
2025-02-12 09:25:37.965 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 87/1849, mem: 7172Mb, iter_time: 1.914s, model_time: 1.871s, total_loss: 2.0, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.6, lr: 8.653e-07, size: (640, 640), ETA: 0:00:26
2025-02-12 09:25:39.891 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 88/1849, mem: 7172Mb, iter_time: 1.926s, model_time: 1.888s, total_loss: 2.3, loss_cls: 0.6, loss_bbox: 1.0, loss_dfl: 0.7, lr: 8.856e-07, size: (640, 640), ETA: 0:00:24
2025-02-12 09:25:41.828 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 89/1849, mem: 7172Mb, iter_time: 1.937s, model_time: 1.904s, total_loss: 2.1, loss_cls: 0.5, loss_bbox: 1.1, loss_dfl: 0.6, lr: 9.060e-07, size: (640, 640), ETA: 0:00:22
2025-02-12 09:25:43.746 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 90/1849, mem: 7172Mb, iter_time: 1.918s, model_time: 1.877s, total_loss: 2.3, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.6, lr: 9.268e-07, size: (640, 640), ETA: 0:00:20
2025-02-12 09:25:45.724 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 91/1849, mem: 7172Mb, iter_time: 1.978s, model_time: 1.930s, total_loss: 3.4, loss_cls: 0.8, loss_bbox: 1.7, loss_dfl: 0.9, lr: 9.477e-07, size: (640, 640), ETA: 0:00:18
2025-02-12 09:25:47.652 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 92/1849, mem: 7172Mb, iter_time: 1.928s, model_time: 1.872s, total_loss: 3.2, loss_cls: 1.1, loss_bbox: 1.3, loss_dfl: 0.8, lr: 9.689e-07, size: (640, 640), ETA: 0:00:16
2025-02-12 09:25:49.561 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 93/1849, mem: 7172Mb, iter_time: 1.909s, model_time: 1.877s, total_loss: 2.0, loss_cls: 0.5, loss_bbox: 0.9, loss_dfl: 0.5, lr: 9.903e-07, size: (640, 640), ETA: 0:00:14
2025-02-12 09:25:51.456 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 94/1849, mem: 7172Mb, iter_time: 1.895s, model_time: 1.857s, total_loss: 2.4, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 1.012e-06, size: (640, 640), ETA: 0:00:12
2025-02-12 09:25:53.370 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 95/1849, mem: 7172Mb, iter_time: 1.915s, model_time: 1.872s, total_loss: 2.6, loss_cls: 0.7, loss_bbox: 1.1, loss_dfl: 0.8, lr: 1.034e-06, size: (640, 640), ETA: 0:00:10
2025-02-12 09:25:55.300 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 96/1849, mem: 7172Mb, iter_time: 1.929s, model_time: 1.891s, total_loss: 1.9, loss_cls: 0.5, loss_bbox: 0.8, loss_dfl: 0.5, lr: 1.056e-06, size: (640, 640), ETA: 0:00:08
2025-02-12 09:25:57.255 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 97/1849, mem: 7172Mb, iter_time: 1.955s, model_time: 1.917s, total_loss: 2.4, loss_cls: 0.5, loss_bbox: 1.3, loss_dfl: 0.7, lr: 1.078e-06, size: (640, 640), ETA: 0:00:06
2025-02-12 09:25:59.166 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 98/1849, mem: 7172Mb, iter_time: 1.911s, model_time: 1.873s, total_loss: 2.7, loss_cls: 0.9, loss_bbox: 1.1, loss_dfl: 0.7, lr: 1.101e-06, size: (640, 640), ETA: 0:00:04
2025-02-12 09:26:01.068 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 99/1849, mem: 7172Mb, iter_time: 1.902s, model_time: 1.855s, total_loss: 2.6, loss_cls: 0.6, loss_bbox: 1.2, loss_dfl: 0.7, lr: 1.124e-06, size: (640, 640), ETA: 0:00:02
2025-02-12 09:26:03.027 | INFO     | damo.apis.detector_trainer:train:367 - epoch: 1/300, iter: 100/1849, mem: 7172Mb, iter_time: 1.959s, model_time: 1.924s, total_loss: 2.4, loss_cls: 0.6, loss_bbox: 1.1, loss_dfl: 0.7, lr: 1.147e-06, size: (640, 640), ETA: 0:00:00
2025-02-12 09:26:03.548 | INFO     | damo.apis.detector_trainer:save_ckpt:398 - Save weights to ./workdirs/damoyolo_tinynasL25_S
